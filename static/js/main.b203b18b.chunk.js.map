{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoIcon/index.js","TodoIcon/CompleteIcon.js","TodoIcon/DeleteIcon.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","items","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","console","log","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","addTodo","push","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","iconTypes","color","fill","TodoIcon","type","onClick","CompleteIcon","onComplete","DeleteIcon","onDelete","TodoItem","CreateTodoButton","msg","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.b203b18b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        items: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n      } = useLocalStorage('TODOS_V1', [])\r\n      const [searchValue, setSearchValue] = React.useState('');\r\n\r\n      const [openModal, setOpenModal] = React.useState(false)\r\n      \r\n      const completedTodos = todos.filter((todo) => todo.completed).length;\r\n      const totalTodos = todos.length;\r\n      console.log(`${completedTodos} todos completados`);\r\n    \r\n    \r\n      let searchedTodos = [];\r\n    \r\n      if(!searchValue >= 1) {\r\n        searchedTodos = todos;\r\n      } else {\r\n        searchedTodos = todos.filter(todo => {\r\n          const todoText = todo.text.toLowerCase();\r\n          const searchText = searchValue.toLowerCase();\r\n          return todoText.includes(searchText);\r\n        })\r\n        console.log(`${searchedTodos} searchedTodos`)\r\n      }\r\n    \r\n      const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = true;\r\n        saveTodos(newTodos);\r\n      }\r\n\r\n      const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n          completed: false,\r\n          text,\r\n        })\r\n        saveTodos(newTodos);\r\n      }\r\n    \r\n      const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1)\r\n        saveTodos(newTodos);\r\n      }\r\n\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            addTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal,\r\n                }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from \"react\";\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false)\r\n    const [loading, setLoading] = React.useState(true)\r\n    const [ items, setItem] = React.useState(initialValue);\r\n  \r\n    React.useEffect(() => {\r\n      setTimeout(() => {\r\n        try {\r\n          const localStorageItem = localStorage.getItem(itemName)\r\n          let parsedItem;\r\n  \r\n          if (!localStorageItem) {\r\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n          } else {\r\n            parsedItem = JSON.parse(localStorageItem)\r\n          }\r\n  \r\n          setItem(parsedItem);\r\n          setLoading(false);\r\n        } catch (error) {\r\n            setError(error);\r\n        }\r\n          }, 1000)\r\n    })\r\n  \r\n    \r\n  \r\n  \r\n    const saveItem = (newItem) => {\r\n      try {\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedItem);\r\n        setItem(newItem);\r\n      } catch (error) {\r\n        setError(error)\r\n      }\r\n    }\r\n  \r\n    return { \r\n      items,\r\n      saveItem,\r\n      loading,\r\n      error,\r\n    }\r\n  }\r\n\r\n  export { useLocalStorage }","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './TodoCounter.css'\r\n\r\nfunction TodoCounter () {\r\n    const { totalTodos, completedTodos} = React.useContext(TodoContext);\r\n    \r\n    return (\r\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\r\n    )\r\n}\r\n\r\nexport { TodoCounter };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './TodoSearch.css'\r\n\r\nfunction TodoSearch() {\r\n\r\n    const { searchValue, setSearchValue } = React.useContext(TodoContext);\r\n    \r\n    const onSearchValueChange = (event) => {\r\n        console.log(event.target.value);\r\n        setSearchValue(event.target.value)\r\n    }\r\n\r\n    return [\r\n        <input className=\"TodoSearch\" \r\n        placeholder=\"Buscar...\" \r\n        value={searchValue}\r\n        onChange={onSearchValueChange}\r\n        />\r\n    ]\r\n        \r\n}\r\n\r\nexport { TodoSearch };","import React from \"react\";\r\nimport './TodoList.css'\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n            {props.children}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport { TodoList };","import React from \"react\";\r\nimport './TodoIcon.css'\r\n// import { ReactComponent as CheckSVG} from '../../public/check.svg'\r\n// import { ReactComponent as DeleteSVG} from '../../public/delete.svg'\r\n\r\nimport { AiFillCheckCircle } from \"react-icons/ai\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\n\r\nconst iconTypes = {\r\n    \"check\": color => (\r\n        <AiFillCheckCircle className=\"Icon-svg Icon-svg--check\" fill={color} />\r\n    ),\r\n    \"delete\": color => (\r\n        <AiFillDelete className=\"Icon-svg Icon-svg--delete\" fill={color}/>\r\n    )\r\n}\r\n\r\nfunction TodoIcon ({ type, color = '#CACFD2', onClick }) {\r\n    return (\r\n        <span\r\n            className={`Icon-container Icon-container--${type}`}\r\n            onClick={onClick}\r\n            >\r\n                {iconTypes[type](color)}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport {TodoIcon}","import React from \"react\";\r\nimport { TodoIcon } from \"./index\";\r\n\r\nfunction CompleteIcon({ completed, onComplete}) {\r\n    return (\r\n        <TodoIcon \r\n            type=\"check\"\r\n            color={completed ? '#4caf50': '#CACFD2'}\r\n            onClick={onComplete}\r\n        />\r\n    )\r\n}\r\n\r\nexport { CompleteIcon }","import React from \"react\";\r\nimport { TodoIcon } from \"./index\";\r\n\r\nfunction DeleteIcon({ onDelete}) {\r\n    return (\r\n        <TodoIcon \r\n            type=\"delete\"\r\n            onClick={onDelete}\r\n        />\r\n    )\r\n}\r\n\r\nexport { DeleteIcon }\r\n","import React from \"react\";\r\nimport './TodoItem.css'\r\nimport { CompleteIcon } from \"../TodoIcon/CompleteIcon\";\r\nimport { DeleteIcon } from \"../TodoIcon/DeleteIcon\";\r\n\r\nfunction TodoItem(props) {\r\n\r\n    return (\r\n        <li>\r\n            <CompleteIcon\r\n                completed={props.completed}\r\n                onComplete={props.onComplete}\r\n            />\r\n            <p className={`${props.completed && 'Completed'}`}>{props.text}</p>\r\n            <DeleteIcon\r\n                onDelete={props.onDelete}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport { TodoItem };","import React from \"react\";\r\nimport './CreateTodoButton.css'\r\n\r\nfunction CreateTodoButton(props) {\r\n    const onClickButton = (msg) => {\r\n        props.setOpenModal(!props.openModal);\r\n    }\r\n    return (\r\n        <button className=\"CreateTodoButton\"\r\n        onClick={onClickButton}\r\n        >\r\n            +\r\n        </button>\r\n    )\r\n}\r\n\r\nexport { CreateTodoButton };","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './Modal.css'\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    )\r\n}\r\n\r\nexport { Modal };","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport './Form.css'\r\n\r\nfunction TodoForm () {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const { addTodo, setOpenModal } = React.useContext(TodoContext)\r\n    \r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Escribe un todo</label>\r\n            <textarea \r\n                placeholder=\"Comprar comida\"\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n            <button\r\n                    className=\"TodoForm-button TodoForm-button-add\"\r\n                    type=\"submit\"\r\n                >\r\n                    Add\r\n                </button>\r\n                <button\r\n                    className=\"TodoForm-button TodoForm-button-cancel\"\r\n                    type=\"button\"\r\n                    onClick={onCancel}\r\n                >\r\n                    Cancel\r\n                </button>\r\n                \r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport {TodoForm};","import React from \"react\";\r\nimport { TodoCounter } from '../TodoCounter'\r\nimport { TodoSearch } from \"../TodoSearch\";\r\nimport { TodoContext } from \"../TodoContext\";\r\nimport { TodoList } from \"../TodoList\";\r\nimport { TodoItem } from \"../TodoItem\";\r\nimport { CreateTodoButton } from \"../CreateTodoButton\";\r\nimport './App.css';\r\nimport { Modal } from \"../Modal\";\r\nimport { TodoForm } from \"../TodoForm\";\r\n\r\nfunction AppUI() {\r\n  const { error,\r\n          loading,\r\n          searchedTodos,\r\n          completeTodo,\r\n          deleteTodo,\r\n          openModal,\r\n          setOpenModal,} = React.useContext(TodoContext);\r\n  \r\n    return (\r\n        <React.Fragment>\r\n      <TodoCounter />\r\n      \r\n\r\n      <TodoSearch />\r\n      \r\n      <TodoList>\r\n      {error && <p className=\"loadingMessage\" >Desesperate, hubo un error</p>}\r\n      {loading && <p className=\"loadingMessage\" >No desesperes, esta cargando...</p>}\r\n      {(!loading && !searchedTodos.length ) && <p className=\"loadingMessage\">Crea tu primer todo</p>}\r\n\r\n      {searchedTodos.map((todo) => (\r\n        <TodoItem \r\n        completed={todo.completed}\r\n        key={todo.text} \r\n        text={todo.text}\r\n        onComplete={() => completeTodo(todo.text)}\r\n        onDelete={() => deleteTodo(todo.text)}\r\n        />\r\n      ) )}\r\n    </TodoList>\r\n\r\n    <CreateTodoButton setOpenModal={setOpenModal} openModal={openModal} />\r\n\r\n    {!!openModal && (\r\n      <Modal>\r\n      <TodoForm />\r\n    </Modal>\r\n    )} \r\n      \r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport {AppUI}","import React from \"react\";\nimport { TodoProvider } from \"../TodoContext\";\nimport { AppUI } from \"./AppUI\";\n\n\nfunction App() {\n\n  React.useEffect( () => {\n    console.log('use effect')\n  }, [])\n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App className = \"App\" />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}